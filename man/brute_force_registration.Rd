% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/registration.R
\name{brute_force_registration}
\alias{brute_force_registration}
\title{Brute Force Point Cloud Registration}
\usage{
brute_force_registration(
  ref,
  mov,
  res = 0.5,
  max_offset = 8,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{ref}{A `LAS` object containing the reference point cloud.}

\item{mov}{A `LAS` object containing the moving point cloud to be aligned.}

\item{res}{Numeric. The resolution for voxel-based downsampling (default: 0.5).}

\item{max_offset}{Numeric. The maximum translation offset in X and Y directions (default: 4). Reducing
the value decrease computation time but reduces the search range.}

\item{verbose}{logical}

\item{...}{Additional parameters, including `debug = TRUE` to enable visualization.}
}
\value{
A 4x4 transformation matrix that best aligns `mov` with `ref`, with an attribute `rms`
indicating the root mean square (RMS) registration error.
}
\description{
This function performs a brute-force registration of a moving point cloud to a reference point cloud
by iterating over a grid of rotation and translation parameters to find the best alignment.
}
\details{
The function performs coarse registration by evaluating transformations over a large parameter grid,
followed by a fine registration step with a refined grid. RMS error is used to assess the alignment quality.
Optionally, debug visualizations can be displayed using `rgl`.
}
\examples{
\dontrun{
ref <- readLAS("reference.las")
mov <- readLAS("moving.las")
M <- brute_force_registration(ref, mov, res = 0.5, max_offset = 4, debug = TRUE)
}

}
